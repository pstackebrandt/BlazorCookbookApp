@page "/"
@rendermode InteractiveServer
@using BlazorCookbookApp.Services
@inject RecipeScanner RecipeScanner
@inject NavigationManager Navigation

<PageTitle>Home</PageTitle>

<h1>Blazor Cookbook</h1>

<p>Welcome to your Blazor Cookbook! Here are all the implemented recipes:</p>

@if (recipes == null)
{
    <p><em>Loading recipes...</em></p>
}
else if (!recipes.Any())
{
    <p><em>No recipes found.</em></p>
}
else
{
    <div class="recipe-overview">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Chapter</th>
                    <th>Recipe</th>
                    <th>Variant</th>
                    <th>Location</th>
                    <th>Summary</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var recipe in recipes)
                {
                    <tr>
                        <td>@recipe.Chapter</td>
                        <td>@recipe.Recipe</td>
                        <td>@(recipe.Variant ?? "")</td>
                        <td>
                            <span class="badge @(recipe.Location == "Client" ? "bg-primary" : "bg-secondary")">
                                @recipe.Location
                            </span>
                        </td>
                        <td>@recipe.Summary</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary" @onclick="() => NavigateToRecipe(recipe.Route)">
                                Open
                            </button>
                            <br />
                            <small><a href="@recipe.Route" class="text-muted">Direct link</a></small>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<RecipeInfo>? recipes;

    /// <summary>
    /// Load all recipes on page initialization and log to console for debugging.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            recipes = await RecipeScanner.GetRecipesAsync();
            Console.WriteLine($"Found {recipes.Count} recipes:");
            foreach (var recipe in recipes)
            {
                Console.WriteLine($"- {recipe.Route} ({recipe.Location}) - {recipe.Summary}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading recipes: {ex.Message}");
            recipes = new List<RecipeInfo>();
        }
    }

    /// <summary>
    /// Navigate to recipe page with debug logging.
    /// </summary>
    private void NavigateToRecipe(string route)
    {
        Console.WriteLine($"Attempting to navigate to: {route}");
        try
        {
            Navigation.NavigateTo(route);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Navigation error: {ex.Message}");
        }
    }
}
