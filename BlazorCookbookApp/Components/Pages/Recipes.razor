@page "/recipes"
@using BlazorCookbookApp.Services
@inject RecipeScanner RecipeScanner
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Browse Recipes - Blazor Cookbook</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h1>Browse Recipes</h1>
            <p class="lead">
                Discover the Blazor Cookbook recipes and additional pages. Each page demonstrates 
                specific Blazor concepts and patterns.
            </p>

            @if (recipes == null)
            {
                <p><em>Loading recipes...</em></p>
            }
            else if (!recipes.Any())
            {
                <p><em>No recipes found.</em></p>
            }
            else
            {
                <div class="recipe-overview">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Chapter</th>
                                <th>Recipe</th>
                                <th>Title</th>
                                <th>Action</th>
                                <th>Summary</th>
                                <th>Location</th>
                                <th>Filename</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var recipe in recipes)
                            {
                                <tr>
                                    <td>@recipe.Chapter</td>
                                    <td>@recipe.Recipe</td>
                                    <td>@recipe.Title</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => NavigateToRecipe(recipe.Route)">
                                            Open
                                        </button>
                                    </td>
                                    <td>@recipe.Summary</td>
                                    <td>
                                        <span class="badge @(recipe.Location == "Client" ? "bg-primary" : "bg-secondary")">
                                            @recipe.Location
                                        </span>
                                    </td>
                                    <td>@recipe.FilePath</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<RecipeInfo>? recipes;

    /// <summary>
    /// Load all recipes on page initialization and log to console for debugging.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            recipes = await RecipeScanner.GetRecipesAsync();
            Console.WriteLine($"Found {recipes.Count} recipes:");
            foreach (var recipe in recipes)
            {
                Console.WriteLine($"- {recipe.Route} ({recipe.Location}) - {recipe.Summary}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading recipes: {ex.Message}");
            recipes = new List<RecipeInfo>();
        }
    }

    /// <summary>
    /// Navigate to recipe page with debug logging.
    /// </summary>
    private void NavigateToRecipe(string route)
    {
        Console.WriteLine($"Attempting to navigate to: {route}");
        try
        {
            Navigation.NavigateTo(route);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Navigation error: {ex.Message}");
        }
    }
} 